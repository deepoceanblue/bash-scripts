#!/bin/bash
##########################################################
#
# desc: executes multiple commands in tmux tiled window.
#       If optional command supplied, it is executes on
#       all lines of a file, otherwise, all lines in a file
#       are executed one by one.
# author: tmk
# date: 20200201
# deps: _tmux 
#
# USAGE: _tmux.cmd.grid --help or see helpMsg below
# 
##########################################################
#
# TODO: maybe merge with _tmux

function helpMsg {
  cat <<'HELPMSG'
   _tmux.cmd.grid -- executes multiple commands in tmux tiled window

   USAGE:

    _tmux.cmd.grid [--cmd|-c <cmd>] --file|-f <fileName>

    --cmd|-c <cmd>
      :optional command that will be executed on all lines in fileName

    --file|-f <fileName>
      :will be read line by line.
       If --cmd supplied, it will be executed on all lines.
       If not, each line will be treated as a command and executed.

    --help|-h
      :display this message and exit.

    --layout|-l
    ` :choose layout other than tiled (grid).
       For valid layout names see `man tmux`.

    --sync|-s
      :set panel sync on---all keystrokes will be on-the-fly send to all panes at once.
       Using my keybindings it can be toggled on/off manually with <C-s>S anyway.

  EXAMPLES:

    _tmux.cmd.grid --cmd ssh --file server.urls 
    :will create tiled tmux window with separate panes, each containing ssh session for url from the file. 

    _tmux.cmd.grid --file rsync.cmds --layout even-vertical
    :will create stacked panes, each running rsync backup command directly from rsync.cmds file.

HELPMSG
}

# default layout
layout="tiled"
# tmux commands
tSplitCmd="tmux split -v -t. " # no trailing semicolon here!
tSelectLayoutCmd="tmux select-layout -t." # no trailing semicolon here!

panes=""

while : ; do 

  case "$1" in
    --cmd|-c) cmd="$2" ; shift 2 ;;
    --file|-f) [[ -r "$2" ]] && fileName="$2"; shift 2;;
    --help|-h) helpMsg && exit 0;;
    --layout|-l) layout="$2" ; shift 2;;
    --sync|-S) tSyncCmd="tmux set synchronise-panes on ;";;
    *) break ;;
  esac

done

[[ -n ${fileName} ]] || exit 130
session="${cmd:-${fileName}}"

ll=1
while read line; do

  [[ -n $line ]] || continue 
  panes+="$tSplitCmd $cmd $line ; "

done < $fileName

_tmux "$session" $panes $tSelectLayoutCmd $layout $tSyncCmd 
# if no _tmux in $PATH, use the line below instead
# tmux new-session -A -s "$session" "$panes $tSelectLayoutCmd $layout ;"

unset cmd fileName layout panes session tKillEmptyPane tSelectLayoutCmd tSplitCmd tSyncCmd
exit 0
